name: CI/CD Pipeline for nginx-static-app

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  IMAGE_TAG: maltsevvm/nginx-static-app
  RELEASE_NAME: myapp
  NAMESPACE: monitoring

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Extract version from commit messages
        id: get_version
        run: |
          VERSION=$(git log -1 --pretty=format:%B | grep -Eo 'v[0-9]+\.[0-9]+\.[0-9]+')
          if [[ ! -z "$VERSION" ]]; then
            echo "VERSION=${VERSION#v}" >> $GITHUB_ENV
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "No version found in the commit message"
            exit 1
          fi

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG }}:${{ env.VERSION }}

  deploy:
    needs: build-and-push
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.0'

      - name: Extract version from commit messages
        id: get_version
        run: |
          VERSION=$(git log -1 --pretty=format:%B | grep -Eo 'v[0-9]+\.[0-9]+\.[0-9]+')
          if [[ ! -z "$VERSION" ]]; then
            echo "VERSION=${VERSION#v}" >> $GITHUB_ENV
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "No version found in the commit message"
            exit 1
          fi

      - name: Replace image tag in deploy.yaml
        run: |
          sed -i "s|image: maltsevvm/nginx-static-app:.*|image: ${{ env.IMAGE_TAG }}:${{ env.VERSION }}|" ./deploy.yaml

      - name: Create kubeconfig
        run: |
          mkdir -p $HOME/.kube/

      - name: Authenticate to Kubernetes cluster
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "${KUBE_CONFIG_DATA}" | base64 --decode > ${HOME}/.kube/config

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f .myapp/deploy.yaml
